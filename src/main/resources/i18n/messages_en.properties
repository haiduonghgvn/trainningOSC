SUCCESS_CODE=200
SUCCESS_MESSAGE=Request sucess
SUCCESS_DESCRIPTIONS=The request has succeeded
#===============================================
BAD_REQUEST_CODE=400
BAD_REQUEST_MESSAGE=BAD_REQUEST
BAD_REQUEST_DESCRIPTIONS=The server could not understand the request due to invalid syntax.
#===============================================
UNAUTHORIZED_CODE=401
UNAUTHORIZED_MESSAGE=UNAUTHORIZED
UNAUTHORIZED_DESCRIPTIONS=Although the HTTP standard specifies "unauthorized", semantically this response means "unauthenticated". That is, the client must authenticate itself to get the requested response.
#===============================================
INSUFFICIENT_CODE=402
INSUFFICIENT_MESSAGE=INSUFFICIENT
INSUFFICIENT_DESCRIPTIONS=This response code is reserved for future use. The initial aim for creating this code was using it for digital payment systems, however this status code is used very rarely and no standard convention exists.
#===============================================
FORBIDDEN_CODE=403
FORBIDDEN_MESSAGE=FORBIDDEN
FORBIDDEN_DESCRIPTIONS=The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource. Unlike 401, the client's identity is known to the server.
#===============================================
NOT_FOUND_CODE=404
NOT_FOUND_MESSAGE=NOT_FOUND
NOT_FOUND_DESCRIPTIONS=The server can not find the requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurrence on the web. 
#===============================================
METHOD_NOT_ALLOWED_CODE=405
METHOD_NOT_ALLOWED_MESSAGE=METHOD_NOT_ALLOWED
METHOD_NOT_ALLOWED_DESCRIPTIONS=The request method is known by the server but has been disabled and cannot be used. For example, an API may forbid DELETE-ing a resource. The two mandatory methods, GET and HEAD, must never be disabled and should not return this error code.
#===============================================
NOT_ACCEPTABLE_CODE=406
NOT_ACCEPTABLE_MESSAGE=NOT_ACCEPTABLE
NOT_ACCEPTABLE_DESCRIPTIONS=This response is sent when the web server, after performing server-driven content negotiation, doesn't find any content that conforms to the criteria given by the user agent.
#===============================================
UNSUPPORTED_MEDIA_TYPE_CODE=415
UNSUPPORTED_MEDIA_TYPE_MESSAGE=UNSUPPORTED_MEDIA_TYPE
UNSUPPORTED_MEDIA_TYPE_DESCRIPTIONS=The media format of the requested data is not supported by the server, so the server is rejecting the request.
#===============================================
UNPROCESSABLE_MEDIA_TYPE_CODE=422
UNPROCESSABLE_MEDIA_TYPE_MESSAGE=UNPROCESSABLE_MEDIA_TYPE
UNPROCESSABLE_MEDIA_TYPE_DESCRIPTIONS=The request was well-formed but was unable to be followed due to semantic errors.
#===============================================
TOO_MANY_REQUESTS_CODE=429
TOO_MANY_REQUESTS_MESSAGE=TOO_MANY_REQUESTS
TOO_MANY_REQUESTS_DESCRIPTIONS=The user has sent too many requests in a given amount of time ("rate limiting").
#===============================================
INTERNAL_SERVER_ERROR_CODE=500
INTERNAL_SERVER_ERROR_MESSAGE=INTERNAL_SERVER_ERROR
INTERNAL_SERVER_ERROR_DESCRIPTIONS=The server has encountered a situation it doesn't know how to handle.
#===============================================
NOT_IMPLEMENTED_CODE=501
NOT_IMPLEMENTED_MESSAGE=NOT_IMPLEMENTED
NOT_IMPLEMENTED_DESCRIPTIONS=The request method is not supported by the server and cannot be handled. The only methods that servers are required to support (and therefore that must not return this code) are GET and HEAD.
#===============================================
SERVICE_UNAVAILABLE_CODE=503
SERVICE_UNAVAILABLE_MESSAGE=SERVICE_UNAVAILABLE
SERVICE_UNAVAILABLE_DESCRIPTIONS=The server is not ready to handle the request. Common causes are a server that is down for maintenance or that is overloaded. Note that together with this response, a user-friendly page explaining the problem should be sent. This responses should be used for temporary conditions and the Retry-After: HTTP header should, if possible, contain the estimated time before the recovery of the service. The webmaster must also take care about the caching-related headers that are sent along with this response, as these temporary condition responses should usually not be cached.
#==============================================
error.message.notFound.name=name must be not null
error.message.notFound.address=address must be not null
error.message.notFound.email=email must be not null
error.message.notFound.semester=semester must be not null
error.message.notFound.mes=Invalid!!